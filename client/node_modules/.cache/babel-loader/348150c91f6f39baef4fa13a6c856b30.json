{"ast":null,"code":"var _jsxFileName = \"/home/carbon/scorpion__1/client/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  gitHubForm.addEventListener('submit', e => {\n    // Prevent default form submission acti\n    e.preventDefault(); // Get the GitHub username input field on the DOM\n\n    let usernameInput = document.getElementById('usernameInput'); // Get the value of the GitHub username input field\n\n    let gitHubUsername = usernameInput.value; // Run GitHub API function, passing in the GitHub username\n\n    requestUserRepos(gitHubUsername);\n  });\n\n  function requestUserRepos(username) {\n    // Create new XMLHttpRequest object\n    const xhr = new XMLHttpRequest(); // GitHub endpoint, dynamically passing in specified username\n\n    const url = `https://api.github.com/users/${username}/repos`; // Open a new connection, using a GET request via URL endpoint\n    // Providing 3 arguments (GET/POST, The URL, Async True/False)\n\n    xhr.open('GET', url, true); // When request is received\n    // Process it here\n\n    xhr.onload = function () {\n      // Parse API data into JSON\n      const data = JSON.parse(this.response); // Loop over each object in data array\n\n      for (let i in data) {\n        // Get the ul with id of of userRepos\n        let ul = document.getElementById('userRepos'); // Create variable that will create li's to be added to ul\n\n        let li = document.createElement('li'); // Add Bootstrap list item class to each li\n\n        li.classList.add('list-group-item');\n        li.innerHTML = `\n                <p><strong>Repo:</strong> ${data[i].name}</p>\n                <p><strong>Description:</strong> ${data[i].description}</p>\n                <p><strong>URL:</strong> <a href=\"${data[i].html_url}\">${data[i].html_url}</a></p>\n            `;\n        ul.appendChild(li);\n      }\n    };\n\n    xhr.send();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/carbon/scorpion__1/client/src/App.js"],"names":["logo","App","gitHubForm","addEventListener","e","preventDefault","usernameInput","document","getElementById","gitHubUsername","value","requestUserRepos","username","xhr","XMLHttpRequest","url","open","onload","data","JSON","parse","response","i","ul","li","createElement","classList","add","innerHTML","name","description","html_url","appendChild","send"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAEbC,EAAAA,UAAU,CAACC,gBAAX,CAA4B,QAA5B,EAAuCC,CAAD,IAAO;AAE3C;AACAA,IAAAA,CAAC,CAACC,cAAF,GAH2C,CAK3C;;AACA,QAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAApB,CAN2C,CAQ3C;;AACA,QAAIC,cAAc,GAAGH,aAAa,CAACI,KAAnC,CAT2C,CAW3C;;AACAC,IAAAA,gBAAgB,CAACF,cAAD,CAAhB;AAEH,GAdC;;AAiBF,WAASE,gBAAT,CAA0BC,QAA1B,EAAmC;AAE/B;AACA,UAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CAH+B,CAK/B;;AACA,UAAMC,GAAG,GAAI,gCAA+BH,QAAS,QAArD,CAN+B,CAQ/B;AACA;;AACAC,IAAAA,GAAG,CAACG,IAAJ,CAAS,KAAT,EAAgBD,GAAhB,EAAqB,IAArB,EAV+B,CAY/B;AACA;;AACAF,IAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AAErB;AACA,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,QAAhB,CAAb,CAHqB,CAKrB;;AACA,WAAK,IAAIC,CAAT,IAAcJ,IAAd,EAAoB;AAEhB;AACA,YAAIK,EAAE,GAAGhB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAT,CAHgB,CAKhB;;AACA,YAAIgB,EAAE,GAAGjB,QAAQ,CAACkB,aAAT,CAAuB,IAAvB,CAAT,CANgB,CAQhB;;AACAD,QAAAA,EAAE,CAACE,SAAH,CAAaC,GAAb,CAAiB,iBAAjB;AAGAH,QAAAA,EAAE,CAACI,SAAH,GAAiB;AAC7B,4CAA4CV,IAAI,CAACI,CAAD,CAAJ,CAAQO,IAAK;AACzD,mDAAmDX,IAAI,CAACI,CAAD,CAAJ,CAAQQ,WAAY;AACvE,oDAAoDZ,IAAI,CAACI,CAAD,CAAJ,CAAQS,QAAS,KAAIb,IAAI,CAACI,CAAD,CAAJ,CAAQS,QAAS;AAC1F,aAJY;AAOAR,QAAAA,EAAE,CAACS,WAAH,CAAeR,EAAf;AAEH;AAEJ,KA7BD;;AAgCAX,IAAAA,GAAG,CAACoB,IAAJ;AAEH;;AAGC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAzEQhC,G;AA2ET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  gitHubForm.addEventListener('submit', (e) => {\n    \n    // Prevent default form submission acti\n    e.preventDefault();\n\n    // Get the GitHub username input field on the DOM\n    let usernameInput = document.getElementById('usernameInput');\n\n    // Get the value of the GitHub username input field\n    let gitHubUsername = usernameInput.value;          \n\n    // Run GitHub API function, passing in the GitHub username\n    requestUserRepos(gitHubUsername);\n\n})\n\n\nfunction requestUserRepos(username){\n    \n    // Create new XMLHttpRequest object\n    const xhr = new XMLHttpRequest();\n    \n    // GitHub endpoint, dynamically passing in specified username\n    const url = `https://api.github.com/users/${username}/repos`;\n   \n    // Open a new connection, using a GET request via URL endpoint\n    // Providing 3 arguments (GET/POST, The URL, Async True/False)\n    xhr.open('GET', url, true);\n    \n    // When request is received\n    // Process it here\n    xhr.onload = function () {\n    \n        // Parse API data into JSON\n        const data = JSON.parse(this.response);\n        \n        // Loop over each object in data array\n        for (let i in data) {\n\n            // Get the ul with id of of userRepos\n            let ul = document.getElementById('userRepos');\n    \n            // Create variable that will create li's to be added to ul\n            let li = document.createElement('li');\n            \n            // Add Bootstrap list item class to each li\n            li.classList.add('list-group-item')\n        \n           \n            li.innerHTML = (`\n                <p><strong>Repo:</strong> ${data[i].name}</p>\n                <p><strong>Description:</strong> ${data[i].description}</p>\n                <p><strong>URL:</strong> <a href=\"${data[i].html_url}\">${data[i].html_url}</a></p>\n            `);\n            \n           \n            ul.appendChild(li);\n        \n        }\n\n    }\n    \n   \n    xhr.send();\n    \n}\n\n\n  return (\n    <div>hello</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}