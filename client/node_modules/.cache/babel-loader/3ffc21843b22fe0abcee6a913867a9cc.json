{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Github = () => {\n  _s();\n\n  const [repos, setRepos] = useState(\"\");\n  const [nrepo, setNrepo] = useState(\"0\");\n  const [data, setData] = useState(\"0\");\n  useEffect(() => {\n    fetch(`https://api.github.com/users/s166harth/repos`).then(res => res.json()).then(data => (console.log(data), setNrepo(data.length), setRepos(data)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Github, \"3F0t/jZp4yZd6VhF0rTXra2aAzs=\");\n\n_c = Github;\nexport default Github;\n\nvar _c;\n\n$RefreshReg$(_c, \"Github\");","map":{"version":3,"sources":["/home/carbon/scorpion__1/client/src/Github.js"],"names":["React","useState","useEffect","Github","repos","setRepos","nrepo","setNrepo","data","setData","fetch","then","res","json","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,GAAD,CAAjC;AACA,QAAK,CAACO,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,GAAD,CAA5B;AACAC,EAAAA,SAAS,CAAC,MAAI;AAEVQ,IAAAA,KAAK,CAAE,8CAAF,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMH,IAAI,KACRM,OAAO,CAACC,GAAR,CAAYP,IAAZ,GACAD,QAAQ,CAACC,IAAI,CAACQ,MAAN,CADR,EAEAX,QAAQ,CAACG,IAAD,CAHA,CAFV;AASD,GAXM,EAWL,EAXK,CAAT;AAYF,sBACE,qCADF;AAaD,CA7BD;;GAAML,M;;KAAAA,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useState,useEffect} from 'react';\n\n\nconst Github = () => {\n    const[repos,setRepos] = useState(\"\");\n    const [nrepo,setNrepo] = useState(\"0\");\n    const[data,setData]=useState(\"0\")\n    useEffect(()=>{\n\n        fetch(`https://api.github.com/users/s166harth/repos`)\n        .then(res => res.json())\n        .then(data=>(\n          console.log(data),\n          setNrepo(data.length),\n          setRepos(data)\n    \n        ))\n    \n      },[])\n  return (\n    <>\n    {/* <p>{repos[2].name}</p> */}\n    {/* <div>\n      {repos.map(i => (\n        <li>\n          {repos[i].name}\n        </li>\n      ))}\n    </div> */}\n    </>\n    \n  )\n}\n\nexport default Github"]},"metadata":{},"sourceType":"module"}